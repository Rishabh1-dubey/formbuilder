# Use official nodejs image as the base image
FROM node:22-alpine

#Set the working directory inside the container
WORKDIR /app

#COPY package*jsonn all file
COPY package*.json ./

RUN npm install

COPY . .


RUN npm install -g prisma
RUN npx prisma generate


ARG DATABASE_URL
ARG DIRECT_URL
ARG NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
ARG CLERK_SECRET_KEY
ARG NEXT_PUBLIC_CLERK_SIGN_IN_URL
ARG NEXT_PUBLIC_CLERK_SIGN_UP_URL
ARG NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL
ARG NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL
ARG GEMINI_API
ARG NEXTAUTH_URL
ARG RAZORPAY_KEY_ID
ARG RAZORPAY_KEY_SECRET
ARG NEXT_PUBLIC_RAZORPAY_KEY_ID
ARG RAZORPAY_KEY_WEBHOOKARG



#Set env varaibel

ENV DATABASE_URL=${DATABASE_URL}}
ENV DIRECT_URL=${DIRECT_URL}
ENV NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
ENV CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
ENV NEXT_PUBLIC_CLERK_SIGN_IN_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_URL}
ENV NEXT_PUBLIC_CLERK_SIGN_UP_URL=${NEXT_PUBLIC_CLERK_SIGN_UP_URL}
ENV NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=${NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL}
ENV NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=${NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL}}
ENV GEMINI_API=${GEMINI_API}
ENV NEXTAUTH_URL=${NEXTAUTH_URL}
ENV RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
ENV RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
ENV NEXT_PUBLIC_RAZORPAY_KEY_ID=${NEXT_PUBLIC_RAZORPAY_KEY_ID}
ENV RAZORPAY_KEY_WEBHOOK=${RAZORPAY_KEY_WEBHOOK}

#Build the nextjs app for production
RUN npm run build


#Expose port
EXPOSE 3000

CMD ["npm", "start"]